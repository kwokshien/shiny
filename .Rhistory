theme(text=element_text(size=15))
qplot(x=sleep_total,y=bodywt,data=msleep,geom="boxplot") +
theme(text=element_text(size=15))
qplot(x=vore,y=bodywt,data=msleep,geom="boxplot") +
theme(text=element_text(size=15))
qplot(x=vore,y=bodywt,data=msleep,geom="boxplot",ylim=c(0,200)) +
theme(text=element_text(size=15))
library(shiny)
runExample("01_hello")
runExample("01_hello",browser=T)
runExample("01_hello",launch.browser=T)
?renderPlot
runGist(6571951)
runGist(6571951,launch.browser=T)
?checkboxGroupInput
?shiny
?p
library(shiny)
system.file("examples",package="shiny")
runExample("01_hello")
runExample("01_text")
runExample("02_text")
runExample("01_hello",launch.browser=T)
runExample("02_text",launch.browser=T)
runExample("02_reactivity",launch.browser=T)
runExample("03_reactivity",launch.browser=T)
library(shiny)
runGist(6571951)
runGist(6571951,launch.browser=T)
library(shiny)
runExample("02_reactivity",launch.browser=T)
runExample("03_reactivity",launch.browser=T)
?switch
require('devtools')
require(rCharts)
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
require('devtools')
require(rCharts)
require('rtools')
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
require('devtools')
require(rCharts)
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
require('devtools')
require(rCharts)
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
require('rtools')
rPlot(S
require('rtools')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
require('devtools')
require(rCharts)
require('rtools')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
require('devtools')
require(rCharts)
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
require(rCharts)
hair_eye = as.data.frame(HairEyeColor)
rPlot(Freq ~ Hair | Eye, color = 'Eye', data = hair_eye, type = 'bar')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
head(iris)
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
require('devtools')
require(rCharts)
require('rtools')
rPlot(Sepal.Length ~ Sepal.Width | Species, data = iris, color = 'Species', type = 'point')
require('devtools')
require(rCharts)
data(package='rCharts')
iris
data()
mtcars
rPlot(~disp, data=mtcars)
require('devtools')
rPlot(~disp, data=mtcars)
require(rCharts)
rPlot(~disp, data=mtcars)
library("rCharts", lib.loc="~/R/win-library/3.1")
rPlot(~disp, data=mtcars)
library("devtools", lib.loc="~/R/win-library/3.1")
rPlot(~disp, data=mtcars)
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = ’Species’, type = ’point’)
names(iris)
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = ’Species’, type = ’point’)
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
?gsub
require('devtools')
require(rCharts)
names(iris)
head(iris)
dataa()
data()
names(diamonds)
rPlot(price~carat,data=diamonds)
rPlot(SepalLength~SepalWidth,data=iris)
head(iris)
rPlot(SepalLength~SepalWidth|Species,data=iris)
rPlot(SepalLength~SepalWidth|Species,data=iris)
names(iris) = gsub("\\.", "", names(iris))
rPlot(SepalLength ~ SepalWidth | Species, data = iris, color = 'Species', type = 'point')
rPlot(price ~ carat,data = diamonds, type = 'point')
diamonds
df = diamonds[sample(nrow(diamonds),size=200),]
rPlot(price ~ carat,data = df, type = 'point')
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat,data = df, type = 'point')
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat,data = df, type = 'point')
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat,data = df, type = 'point',cex=0.75)
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat,data = df, type = 'point',cex=2.75)
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat,data = df, type = 'point')
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat,data = df, type = 'point',height=400,width=750)
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat,data = df, type = 'point',height=40,width=75)
rPlot(price ~ carat|cut,data = df, type = 'point')
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat|cut,data = df, type = 'point')
rPlot(price ~ carat|cut,data = df, type = 'point',color='color')
rPlot(price ~ carat|cut,data = df, type = 'point',color='cut')
rPlot(price ~ carat|cut,data = df, type = 'point',color='color')
rplot(price~carat,group='cut',data=diamonds,type='multiBarChart')
rPlot(price~carat,group='cut',data=diamonds,type='multiBarChart')
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- rPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
nPlot(price~carat,group='cut',data=diamonds,type='multiBarChart')
hair_eye_male <- subset(as.data.frame(HairEyeColor), Sex == "Male")
n1 <- nPlot(Freq ~ Hair, group = "Eye", data = hair_eye_male, type = "multiBarChart")
n1$print("chart3")
n1$print("chart3")
nPlot(price~carat,group='cut',data=diamonds,type='bar')
rPlot(price~carat,group='cut',data=diamonds,type='bar')
rPlot(price~carat,group='cut',data=df,type='bar')
rPlot(price~cara|bar,data=df,type='bar')
rPlot(price~cara|cut,color="cut",data=df,type='bar')
rPlot(price~cara|cut,color='cut',data=df,type='bar')
rPlot(price~carat|cut,color='cut',data=df,type='bar')
rPlot(price~carat|cut,data=df,type='bar')
rPlot(price~carat|cut,data=df,type='bar')
rPlot(price ~ carat|cut,data = df, type = 'point',color='color')
rPlot(price~carat|cut,data=df,type='bar',color='color')
rPlot(~carat|cut,data=df,type='bar',color='color')
rPlot(Freq~carat|cut,data=df,type='bar',color='color')
hair_eye = as.data.frame(HairEyeColor)
hair_eye
head(hair_eye)
rPlot(price~carat|cut,data=df,type='bar',color='color')
df = diamonds[sample(nrow(diamonds),size=30),]
rPlot(price~carat|cut,data=df,type='bar',color='color')
df = diamonds[sample(nrow(diamonds),size=10),]
rPlot(price~carat|cut,data=df,type='bar',color='color')
df
require('devtools')
require(rCharts)
df = diamonds[sample(nrow(diamonds),size=100),]
rPlot(price ~ carat,data = df, type = 'point')
rPlot(price~carat|cut,data=df,type='column')
# Prepare data
x <- data.frame(USPersonalExpenditure)
colnames(x) <- substr(colnames(x), 2, 5)
# Create chart
a <- rCharts:::Highchart$new()
a$chart(type = "column")
a$title(text = "US Personal Expenditure")
a$xAxis(categories = rownames(x))
a$yAxis(title = list(text = "Billions of dollars"))
a$data(x)
# Print chart
a$printChart()
library(rCharts)
# Prepare data
x <- data.frame(USPersonalExpenditure)
colnames(x) <- substr(colnames(x), 2, 5)
# Create chart
a <- rCharts:::Highchart$new()
a$chart(type = "column")
a$title(text = "US Personal Expenditure")
a$xAxis(categories = rownames(x))
a$yAxis(title = list(text = "Billions of dollars"))
a$data(x)
# Print chart
a$printChart()
rPlot(price ~ carat|cut,data = df, type = 'point',color='color')
#histogram
rPlot(~carat|cut,data=df,type='column')
rPlot(price ~ carat|cut,data = df, type = 'point',color='color')
rPlot(price~carat|cut,data=df,type='line')
?rplot
?rPlot
?mPlot
?xPlot
data()
?transform
#line
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
m1
?transform
x = seq(from=-pi, to=pi, by=0.01)
y1 = sin(x)
y2 = cos(x)
name = ("x","y1","y2")
cal = data.frame(name,x,y1,y2)
x = seq(from=-pi, to=pi, by=0.01)
y1 = sin(x)
y2 = cos(x)
name = c("x","y1","y2")
cal = data.frame(name,x,y1,y2)
plot(sin(x))
x = seq(from=-pi, to=pi, by=0.1)
y1 = sin(x)
y2 = cos(x)
name = c("x","y1","y2")
cal = data.frame(name,x,y1,y2)
str(cal)
rPlot(x ~ y1 data = cal, type = 'line')
rPlot(x ~ y1, data = cal, type = 'line')
rPlot(y1 ~ x, data = cal, type = 'line')
rPlot(price ~ carat|cut,data = df, type = 'point',color='color')
rPlot(y1 ~ x, data = cal, type = 'line')
rPlot(y1 ~ x, data = cal, type = 'point')
mPlot(y1 ~ x, data = cal, type = 'line')
rPlot(y1 ~ x, data = cal, type = 'line')
mPlot(x="x",y=c("y1","y2"), data = cal, type = 'line')
mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
mPlot(x="x",y=c("y1","y2"), data = cal, type = 'line')
df
df_new
library("xlsx")
library("rJava")
library("xlsxjars")
library("XLConnect")
library("ggplot2")
# link on google shortener
# http://goo.gl/q0AM7e
fileUrl = "http://goo.gl/v34t8V"
destfile2 <- "./Denggue Cases+Mortality 2010-2015.xlsx"
download.file(fileUrl,destfile2, mode="wb")
# load the Excel workbook as an R object:
wb <- loadWorkbook(destfile2) # currently set to destfile2 (dropbox)
# Structure of the workbook
str(wb)
df <-  readWorksheet(wb, sheet = "Kes 2010",
startCol = which(LETTERS=="B"),
startRow = 4,
endCol = grep("BB",c(LETTERS, sapply(LETTERS, paste0, LETTERS))),
endRow = 19 ,
header = TRUE, rownames=TRUE)
weekdate <- format(seq(as.Date('2010/01/08'), by='weeks',length=52), format="%W")
weekdate
fulldate <- format(seq(as.Date('2010/01/08'), by='weeks',length=52), format="%d-%b-%Y")
fulldate
# "POSIXlt" "POSIXt"
dates <- strptime(fulldate, format="%d-%b-%Y")
dates
# not working, Kwok Shien, can you fix this?
#plot(dates,dvs[,1:2])
#install.packages("reshape")
library(reshape)
new_df = melt(df) #reshape dataframe using R default setting
str(new_df) #check the resultant dataframe
ggplot(new_df,aes(x=variable,y=value,color=NEGERI))+
geom_line(aes(group=NEGERI))+
theme(axis.text.x = element_text(angle=90, hjust=1))
require(rCharts)
p1 <- rPlot(variable~value,data=new_df,type='line')
require(rCharts)
library("rCharts", lib.loc="~/R/win-library/3.1")
p1 <- rPlot(variable~value,data=new_df,type='line')
detach("package:rCharts", unload=TRUE)
require(devtools)
require(rCharts)
p1 <- rPlot(variable~value,data=new_df,type='line')
install_github('rCharts', 'ramnathv')
require(rCharts)
p1 <- rPlot(variable~value,data=new_df,type='line')
p1
p1 <- rPlot(value~variable,data=new_df,type='line')
p1
p1 <- rPlot(x=variable,y=value,data=new_df,type='line')
p1
p1 <- rPlot(x=variable,y=value,data=new_df,type='line')
p1 <- rPlot(x="variable",y="value",data=new_df,type='line')
p1
p1 <- rPlot(x="variable",y="value",data=new_df,type='point')
p1
head(new_df)
PERLIS = subset(new_df,NEGERI == PERLIS)
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='point')
p1
PERLIS = subset(new_df,NEGERI == "PERLIS")
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='point')
p1
PERLIS = subset(new_df,NEGERI == "PERLIS")
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='point',color="NEGERI")
p1
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='line',color="NEGERI")
p1
p1 <- rPlot(value~variable|NEGERI,data=new_df,type='line',color="NEGERI")
p1
p1 <- rPlot(value~variable|NEGERI,data=new_df,type='point',color="NEGERI")
p1
p1 <- rPlot(value~variable|NEGERI,data=new_df,type='point')
p1
p1 <- rPlot(value~variable|NEGERI,data=new_df,type='point',color="NEGERI")
p1
p1 <- rPlot(value~variable|NEGERI,data=new_df,type='point',color="NEGERI")
p1
p1 <- mPlot(x="variable",y="value",data=PERLIS,type='line',color="NEGERI")
p1
p1 <- mPlot(value~variable|NEGERI,data=new_df,type='line',color="NEGERI")
p1
p1$print("chart2")
p1 <- mPlot(x="variable",y="value",data=PERLIS,type='line')
p1$print("chart2")
p1
p1$print("chart1")
p1$print("chart1")
p1 <- mPlot(x="variable",y="value",data=PERLIS,type='line')
p1$print("chart1")
p1
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
dev.off()
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
PERLIS = subset(new_df,NEGERI == "PERLIS")
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='type',color="NEGERI")
p1
require(devtools)
require(rCharts)
PERLIS = subset(new_df,NEGERI == "PERLIS")
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='type',color="NEGERI")
p1
setwd("E:/Company/Iconix/Big Data/2014_11_03 R/3 Big data week dangue")
library("xlsx")
library("rJava")
library("xlsxjars")
library("XLConnect")
library("ggplot2")
# link on google shortener
# http://goo.gl/q0AM7e
fileUrl = "http://goo.gl/v34t8V"
destfile2 <- "./Denggue Cases+Mortality 2010-2015.xlsx"
download.file(fileUrl,destfile2, mode="wb")
# load the Excel workbook as an R object:
wb <- loadWorkbook(destfile2) # currently set to destfile2 (dropbox)
# Structure of the workbook
str(wb)
df <-  readWorksheet(wb, sheet = "Kes 2010",
startCol = which(LETTERS=="B"),
startRow = 4,
endCol = grep("BB",c(LETTERS, sapply(LETTERS, paste0, LETTERS))),
endRow = 19 ,
header = TRUE, rownames=TRUE)
# grep("BB",c(LETTERS, sapply(LETTERS, paste0, LETTERS))),
# getting the corresponding number from alphabet in Eccel
#rownames(df) = df[, 1] # the first column will be the first header
#df<- subset( df, select = -NEGERI )
# finalised data time & state
#dvs <- t(df)
#dvs
# create sequence of weekly dates
# character
weekdate <- format(seq(as.Date('2010/01/08'), by='weeks',length=52), format="%W")
weekdate
fulldate <- format(seq(as.Date('2010/01/08'), by='weeks',length=52), format="%d-%b-%Y")
fulldate
# "POSIXlt" "POSIXt"
dates <- strptime(fulldate, format="%d-%b-%Y")
dates
# not working, Kwok Shien, can you fix this?
#plot(dates,dvs[,1:2])
#install.packages("reshape")
library(reshape)
new_df = melt(df) #reshape dataframe using R default setting
str(new_df) #check the resultant dataframe
# ggplot(new_df,aes(x=variable,y=value,color=NEGERI))+
#   geom_line(aes(group=NEGERI))+
#   theme(axis.text.x = element_text(angle=90, hjust=1))
require(devtools)
require(rCharts)
PERLIS = subset(new_df,NEGERI == "PERLIS")
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='type',color="NEGERI")
p1
p1
ggplot(new_df,aes(x=variable,y=value,color=NEGERI))+
geom_line(aes(group=NEGERI))+
theme(axis.text.x = element_text(angle=90, hjust=1))
PERLIS = subset(new_df,NEGERI == "PERLIS")
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='type',color="NEGERI")
p1
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='line',color="NEGERI")
p1
p1 <- mPlot(x="variable",y="value",data=PERLIS,type='line')
p1
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='line',color="NEGERI")
p1
p1 <- mPlot(x="variable",y="value",data=PERLIS,type='Line')
p1
p1$print("chart1")
p1 <- mPlot(x="variable",y="value",type='Line',data=PERLIS)
p1
data(economics, package = "ggplot2")
econ <- transform(economics, date = as.character(date))
m1 <- mPlot(x = "date", y = c("psavert", "uempmed"), type = "Line", data = econ)
m1$set(pointSize = 0, lineWidth = 1)
m1$print("chart2")
p1 <- rPl
p1
p1 <- mPlot(x="variable",y="value",type='Line',data=PERLIS)
p1
dev.off()
p1 <- mPlot(x="variable",y="value",type='Line',data=PERLIS)
p1
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='line',color="NEGERI")
p1
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='line',color="NEGERI")
p1$layer <- rPlot(x="variable",y="value",data=PERLIS,type='point',color="NEGERI")
p1$print()
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='line',color="NEGERI")
p1$layer <- rPlot(x="variable",y="value",data=PERLIS,type='point',color="NEGERI")
p1
p1 <- rPlot(x="variable",y="value",data=PERLIS,type='line',color="NEGERI")
p1$layer(x="variable",y="value",data=PERLIS,type='point',color="NEGERI")
p1
df_new
new_df
View(new_df)
write.csv(file=filename,x=new_df)
setwd("E:/Company/Iconix/Big Data/2014_11_03 R/3 Big data week dangue")
setwd("E:/Company/Iconix/Big Data/2014_11_03 R/3 Big data week dangue")
write.csv(file=filename,x=new_df)
write.csv(new_df,file="myfile.csv")
setwd("E:/Company/Iconix/Big Data/2014_11_03 R/3 Big data week dangue/shiny")
setwd("E:/Company/Iconix/Big Data/2014_11_03 R/3 Big data week dangue/shiny")
renApp()
runApp()
library(shiny)
install.packages("shiny")
library("shiny", lib.loc="~/R/win-library/3.1")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
unique(new_df$NEGERI)
unique(new_df$NEGERI)
runApp()
runExample("01_hello")
runExample("01_hello")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
m1$lib
m1$lib
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
m1$lib
m1$lib
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
